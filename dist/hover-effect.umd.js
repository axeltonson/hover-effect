!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("three"),require("gsap/TweenMax")):"function"==typeof define&&define.amd?define(["three","gsap/TweenMax"],t):e.hoverEffect=t(e.THREE,e.TweenMax)}(this,function(e,t){return t=t&&t.hasOwnProperty("default")?t.default:t,function(i){function n(){for(var e=arguments,t=0;t<arguments.length;t++)if(void 0!==e[t])return e[t]}console.log("%c Hover effect by Robin Delaporte: https://github.com/robin-dela/hover-effect ","color: #bada55; font-size: 0.8rem");var o=i.parent,a=i.displacementImage,r=i.image1,s=i.image2,d=n(i.intensity1,i.intensity,1),f=n(i.intensity2,i.intensity,1),l=n(i.angle,Math.PI/4),u=n(i.angle1,l),m=n(i.angle2,3*-l),v=n(i.speedIn,i.speed,1.6),c=n(i.speedOut,i.speed,1.2),g=n(i.hover,!0),p=n(i.easing,Expo.easeOut),h=n(i.video,!1);if(o)if(r&&s&&a){var y=new e.Scene,x=new e.OrthographicCamera(o.offsetWidth/-2,o.offsetWidth/2,o.offsetHeight/2,o.offsetHeight/-2,1,1e3);x.position.z=1;var w=new e.WebGLRenderer({antialias:!1,alpha:!0});w.setPixelRatio(window.devicePixelRatio),w.setClearColor(16777215,0),w.setSize(o.offsetWidth,o.offsetHeight),o.appendChild(w.domElement);var F=function(){w.render(y,x)},H=new e.TextureLoader;H.crossOrigin="";var P=H.load(a,F);if(P.wrapS=P.wrapT=e.RepeatWrapping,h){var W=function(){requestAnimationFrame(W),w.render(y,x)};W(),(h=document.createElement("video")).muted=!0,h.autoplay=!0,h.loop=!0,h.src=r,h.load();var L=document.createElement("video");L.muted=!0,L.autoplay=!0,L.loop=!0,L.src=s,L.load();var E=new e.VideoTexture(h),T=new e.VideoTexture(L);E.magFilter=T.magFilter=e.LinearFilter,E.minFilter=T.minFilter=e.LinearFilter,L.addEventListener("loadeddata",function(){L.play(),(T=new e.VideoTexture(L)).magFilter=e.LinearFilter,T.minFilter=e.LinearFilter,D.uniforms.texture2.value=T},!1),h.addEventListener("loadeddata",function(){h.play(),(E=new e.VideoTexture(h)).magFilter=e.LinearFilter,E.minFilter=e.LinearFilter,D.uniforms.texture1.value=E},!1)}else E=H.load(r,function(e){S(e,1)}),T=H.load(s,function(e){S(e,2)}),E.magFilter=T.magFilter=e.LinearFilter,E.minFilter=T.minFilter=e.LinearFilter;var D=new e.ShaderMaterial({uniforms:{intensity1:{type:"f",value:d},intensity2:{type:"f",value:f},dispFactor:{type:"f",value:0},angle1:{type:"f",value:u},angle2:{type:"f",value:m},texture1:{type:"t",value:E},texture2:{type:"t",value:T},disp:{type:"t",value:P},canvasWidth:{type:"f",value:o.offsetWidth},canvasHeight:{type:"f",value:o.offsetHeight},image1Width:{type:"f",value:700},image1Height:{type:"f",value:700},image2Width:{type:"f",value:700},image2Height:{type:"f",value:700}},vertexShader:"\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",fragmentShader:"\nvarying vec2 vUv;\nuniform float dispFactor;\nuniform sampler2D disp;\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform float angle1;\nuniform float angle2;\nuniform float intensity1;\nuniform float intensity2;\nuniform float canvasWidth;\nuniform float canvasHeight;\nuniform float image1Width;\nuniform float image1Height;\nuniform float image2Width;\nuniform float image2Height;\nmat2 getRotM(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  return mat2(c, -s, s, c);\n}\n// Proportion script from here: https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\nvec2 addProportionToDistortedPosition(vec2 originalDistortedPos, float imgWidth, float imgHeight){\n  /* Set proportion code */\n  vec2 s = vec2(canvasWidth, canvasHeight); // Screen\n  vec2 i = vec2(imgWidth, imgHeight); // Image\n  float rs = s.x / s.y;\n  float ri = i.x / i.y;\n  vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n  vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n  return originalDistortedPos * s / new + offset;\n  /* End set proportion code */\n} \nvoid main() {\n  vec4 disp = texture2D(disp, vUv);\n  vec2 dispVec = vec2(disp.r, disp.g);\n  vec2 distortedPosition1 = vUv + getRotM(angle1) * dispVec * intensity1 * dispFactor;\n  vec2 distortedPosition2 = vUv + getRotM(angle2) * dispVec * intensity2 * (1.0 - dispFactor);\n  distortedPosition1 = addProportionToDistortedPosition(distortedPosition1, image1Width, image1Height);\n  distortedPosition2 = addProportionToDistortedPosition(distortedPosition2, image2Width, image2Height);\n  vec4 _texture1 = texture2D(texture1, distortedPosition1);\n  vec4 _texture2 = texture2D(texture2, distortedPosition2);\n  gl_FragColor = mix(_texture1, _texture2, dispFactor);\n}\n",transparent:!0,opacity:1}),M=new e.PlaneBufferGeometry(o.offsetWidth,o.offsetHeight,1),b=new e.Mesh(M,D);y.add(b),g&&(o.addEventListener("mouseenter",R),o.addEventListener("touchstart",R),o.addEventListener("mouseleave",U),o.addEventListener("touchend",U)),window.addEventListener("resize",function(e){D.uniforms.canvasWidth.value=o.offsetWidth,D.uniforms.canvasHeight.value=o.offsetHeight,w.setSize(o.offsetWidth,o.offsetHeight),F()}),this.next=R,this.previous=U,w.setSize(o.offsetWidth,o.offsetHeight)}else console.warn("One or more images are missing");else console.warn("Parent missing");function S(e,t){var i=e.image.width,n=e.image.height;1==t?(D.uniforms.image1Width.value=i,D.uniforms.image1Height.value=n):(D.uniforms.image2Width.value=i,D.uniforms.image2Height.value=n),F()}function R(){t.to(D.uniforms.dispFactor,v,{value:1,ease:p,onUpdate:F,onComplete:F})}function U(){t.to(D.uniforms.dispFactor,c,{value:0,ease:p,onUpdate:F,onComplete:F})}}});
//# sourceMappingURL=hover-effect.umd.js.map
